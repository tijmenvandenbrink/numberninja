name: Vulnerability Scans

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      scan_images:
        description: 'Comma-separated list of image tags to scan (leave empty for latest)'
        required: false
        type: string

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  scan-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [backend, frontend]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get image tags
        id: tags
        run: |
          if [ -n "${{ github.event.inputs.scan_images }}" ]; then
            echo "tags=${{ github.event.inputs.scan_images }}" >> $GITHUB_OUTPUT
          else
            # Get latest 3 releases
            TAGS=$(gh api repos/${{ github.repository }}/releases --limit 3 | jq -r '.[].tag_name' | tr '\n' ',' | sed 's/,$//')
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}:latest'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.component }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: '0'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.component }}.sarif'
          category: 'trivy-${{ matrix.component }}'

      - name: Run Trivy vulnerability scanner (JSON output)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.component }}:latest'
          format: 'json'
          output: 'trivy-results-${{ matrix.component }}.json'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
          exit-code: '0'

      - name: Generate vulnerability summary
        run: |
          echo "## Vulnerability Scan Results for ${{ matrix.component }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "trivy-results-${{ matrix.component }}.json" ]; then
            CRITICAL=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity=="CRITICAL") | .VulnerabilityID' trivy-results-${{ matrix.component }}.json | wc -l)
            HIGH=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity=="HIGH") | .VulnerabilityID' trivy-results-${{ matrix.component }}.json | wc -l)
            MEDIUM=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity=="MEDIUM") | .VulnerabilityID' trivy-results-${{ matrix.component }}.json | wc -l)
            LOW=$(jq '.Results[]?.Vulnerabilities[]? | select(.Severity=="LOW") | .VulnerabilityID' trivy-results-${{ matrix.component }}.json | wc -l)
            
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Critical | $CRITICAL |" >> $GITHUB_STEP_SUMMARY
            echo "| High | $HIGH |" >> $GITHUB_STEP_SUMMARY
            echo "| Medium | $MEDIUM |" >> $GITHUB_STEP_SUMMARY
            echo "| Low | $LOW |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Fail if critical vulnerabilities found
            if [ "$CRITICAL" -gt 0 ]; then
              echo "::error::Found $CRITICAL critical vulnerabilities in ${{ matrix.component }}"
            fi
          else
            echo "No scan results found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload scan results as artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: trivy-results-${{ matrix.component }}
          path: trivy-results-${{ matrix.component }}.*
          retention-days: 30

  scan-filesystem:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner on filesystem
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'

      - name: Upload filesystem scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'
          category: 'trivy-filesystem'

  scan-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy config scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'

      - name: Upload config scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-config-results.sarif'
          category: 'trivy-config'

  summary:
    needs: [scan-images, scan-filesystem, scan-config]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Overall summary
        run: |
          echo "## Overall Vulnerability Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Image Scans | ${{ needs.scan-images.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Filesystem Scan | ${{ needs.scan-filesystem.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Config Scan | ${{ needs.scan-config.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the Security tab for detailed vulnerability reports." >> $GITHUB_STEP_SUMMARY